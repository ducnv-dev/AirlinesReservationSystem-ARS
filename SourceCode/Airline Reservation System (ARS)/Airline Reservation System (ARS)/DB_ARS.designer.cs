#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Airline_Reservation_System__ARS_
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_ARS")]
	public partial class DB_ARSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAIRLINE(AIRLINE instance);
    partial void UpdateAIRLINE(AIRLINE instance);
    partial void DeleteAIRLINE(AIRLINE instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    partial void InsertCITY(CITY instance);
    partial void UpdateCITY(CITY instance);
    partial void DeleteCITY(CITY instance);
    partial void InsertFLIGHT(FLIGHT instance);
    partial void UpdateFLIGHT(FLIGHT instance);
    partial void DeleteFLIGHT(FLIGHT instance);
    partial void InsertPLANE(PLANE instance);
    partial void UpdatePLANE(PLANE instance);
    partial void DeletePLANE(PLANE instance);
    partial void InsertTICKET(TICKET instance);
    partial void UpdateTICKET(TICKET instance);
    partial void DeleteTICKET(TICKET instance);
    #endregion
		
		public DB_ARSDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DB_ARSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB_ARSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_ARSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_ARSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_ARSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AIRLINE> AIRLINEs
		{
			get
			{
				return this.GetTable<AIRLINE>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		public System.Data.Linq.Table<CITY> CITies
		{
			get
			{
				return this.GetTable<CITY>();
			}
		}
		
		public System.Data.Linq.Table<FLIGHT> FLIGHTs
		{
			get
			{
				return this.GetTable<FLIGHT>();
			}
		}
		
		public System.Data.Linq.Table<PLANE> PLANEs
		{
			get
			{
				return this.GetTable<PLANE>();
			}
		}
		
		public System.Data.Linq.Table<TICKET> TICKETs
		{
			get
			{
				return this.GetTable<TICKET>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AIRLINE")]
	public partial class AIRLINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AIRLINE_ID;
		
		private string _AIRLINE_CODE;
		
		private System.Nullable<int> _AIRLINE_CITY_ID_START;
		
		private System.Nullable<int> _AIRLINE_CITY_ID_STOP;
		
		private System.Nullable<int> _AIRLINE_DISTANCE;
		
		private System.Nullable<int> _AIRLINE_STATUS;
		
		private EntitySet<FLIGHT> _FLIGHTs;
		
		private EntityRef<CITY> _CITY;
		
		private EntityRef<CITY> _CITY1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAIRLINE_IDChanging(int value);
    partial void OnAIRLINE_IDChanged();
    partial void OnAIRLINE_CODEChanging(string value);
    partial void OnAIRLINE_CODEChanged();
    partial void OnAIRLINE_CITY_ID_STARTChanging(System.Nullable<int> value);
    partial void OnAIRLINE_CITY_ID_STARTChanged();
    partial void OnAIRLINE_CITY_ID_STOPChanging(System.Nullable<int> value);
    partial void OnAIRLINE_CITY_ID_STOPChanged();
    partial void OnAIRLINE_DISTANCEChanging(System.Nullable<int> value);
    partial void OnAIRLINE_DISTANCEChanged();
    partial void OnAIRLINE_STATUSChanging(System.Nullable<int> value);
    partial void OnAIRLINE_STATUSChanged();
    #endregion
		
		public AIRLINE()
		{
			this._FLIGHTs = new EntitySet<FLIGHT>(new Action<FLIGHT>(this.attach_FLIGHTs), new Action<FLIGHT>(this.detach_FLIGHTs));
			this._CITY = default(EntityRef<CITY>);
			this._CITY1 = default(EntityRef<CITY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIRLINE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AIRLINE_ID
		{
			get
			{
				return this._AIRLINE_ID;
			}
			set
			{
				if ((this._AIRLINE_ID != value))
				{
					this.OnAIRLINE_IDChanging(value);
					this.SendPropertyChanging();
					this._AIRLINE_ID = value;
					this.SendPropertyChanged("AIRLINE_ID");
					this.OnAIRLINE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIRLINE_CODE", DbType="NVarChar(50)")]
		public string AIRLINE_CODE
		{
			get
			{
				return this._AIRLINE_CODE;
			}
			set
			{
				if ((this._AIRLINE_CODE != value))
				{
					this.OnAIRLINE_CODEChanging(value);
					this.SendPropertyChanging();
					this._AIRLINE_CODE = value;
					this.SendPropertyChanged("AIRLINE_CODE");
					this.OnAIRLINE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIRLINE_CITY_ID_START", DbType="Int")]
		public System.Nullable<int> AIRLINE_CITY_ID_START
		{
			get
			{
				return this._AIRLINE_CITY_ID_START;
			}
			set
			{
				if ((this._AIRLINE_CITY_ID_START != value))
				{
					if (this._CITY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAIRLINE_CITY_ID_STARTChanging(value);
					this.SendPropertyChanging();
					this._AIRLINE_CITY_ID_START = value;
					this.SendPropertyChanged("AIRLINE_CITY_ID_START");
					this.OnAIRLINE_CITY_ID_STARTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIRLINE_CITY_ID_STOP", DbType="Int")]
		public System.Nullable<int> AIRLINE_CITY_ID_STOP
		{
			get
			{
				return this._AIRLINE_CITY_ID_STOP;
			}
			set
			{
				if ((this._AIRLINE_CITY_ID_STOP != value))
				{
					if (this._CITY1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAIRLINE_CITY_ID_STOPChanging(value);
					this.SendPropertyChanging();
					this._AIRLINE_CITY_ID_STOP = value;
					this.SendPropertyChanged("AIRLINE_CITY_ID_STOP");
					this.OnAIRLINE_CITY_ID_STOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIRLINE_DISTANCE", DbType="Int")]
		public System.Nullable<int> AIRLINE_DISTANCE
		{
			get
			{
				return this._AIRLINE_DISTANCE;
			}
			set
			{
				if ((this._AIRLINE_DISTANCE != value))
				{
					this.OnAIRLINE_DISTANCEChanging(value);
					this.SendPropertyChanging();
					this._AIRLINE_DISTANCE = value;
					this.SendPropertyChanged("AIRLINE_DISTANCE");
					this.OnAIRLINE_DISTANCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AIRLINE_STATUS", DbType="Int")]
		public System.Nullable<int> AIRLINE_STATUS
		{
			get
			{
				return this._AIRLINE_STATUS;
			}
			set
			{
				if ((this._AIRLINE_STATUS != value))
				{
					this.OnAIRLINE_STATUSChanging(value);
					this.SendPropertyChanging();
					this._AIRLINE_STATUS = value;
					this.SendPropertyChanged("AIRLINE_STATUS");
					this.OnAIRLINE_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AIRLINE_FLIGHT", Storage="_FLIGHTs", ThisKey="AIRLINE_ID", OtherKey="FLIGHT_AIRLINE_ID")]
		public EntitySet<FLIGHT> FLIGHTs
		{
			get
			{
				return this._FLIGHTs;
			}
			set
			{
				this._FLIGHTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITY_AIRLINE", Storage="_CITY", ThisKey="AIRLINE_CITY_ID_START", OtherKey="CITY_ID", IsForeignKey=true)]
		public CITY CITY
		{
			get
			{
				return this._CITY.Entity;
			}
			set
			{
				CITY previousValue = this._CITY.Entity;
				if (((previousValue != value) 
							|| (this._CITY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CITY.Entity = null;
						previousValue.AIRLINEs.Remove(this);
					}
					this._CITY.Entity = value;
					if ((value != null))
					{
						value.AIRLINEs.Add(this);
						this._AIRLINE_CITY_ID_START = value.CITY_ID;
					}
					else
					{
						this._AIRLINE_CITY_ID_START = default(Nullable<int>);
					}
					this.SendPropertyChanged("CITY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITY_AIRLINE1", Storage="_CITY1", ThisKey="AIRLINE_CITY_ID_STOP", OtherKey="CITY_ID", IsForeignKey=true)]
		public CITY CITY1
		{
			get
			{
				return this._CITY1.Entity;
			}
			set
			{
				CITY previousValue = this._CITY1.Entity;
				if (((previousValue != value) 
							|| (this._CITY1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CITY1.Entity = null;
						previousValue.AIRLINEs1.Remove(this);
					}
					this._CITY1.Entity = value;
					if ((value != null))
					{
						value.AIRLINEs1.Add(this);
						this._AIRLINE_CITY_ID_STOP = value.CITY_ID;
					}
					else
					{
						this._AIRLINE_CITY_ID_STOP = default(Nullable<int>);
					}
					this.SendPropertyChanged("CITY1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FLIGHTs(FLIGHT entity)
		{
			this.SendPropertyChanging();
			entity.AIRLINE = this;
		}
		
		private void detach_FLIGHTs(FLIGHT entity)
		{
			this.SendPropertyChanging();
			entity.AIRLINE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USERS")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USERS_ID;
		
		private string _USERS_USERNAME;
		
		private string _USERS_PASSWORD;
		
		private string _USERS_FULLNAME;
		
		private string _USER_EMAIL;
		
		private string _USER_PHONE;
		
		private System.Nullable<int> _USER_STATUS;
		
		private EntitySet<TICKET> _TICKETs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERS_IDChanging(int value);
    partial void OnUSERS_IDChanged();
    partial void OnUSERS_USERNAMEChanging(string value);
    partial void OnUSERS_USERNAMEChanged();
    partial void OnUSERS_PASSWORDChanging(string value);
    partial void OnUSERS_PASSWORDChanged();
    partial void OnUSERS_FULLNAMEChanging(string value);
    partial void OnUSERS_FULLNAMEChanged();
    partial void OnUSER_EMAILChanging(string value);
    partial void OnUSER_EMAILChanged();
    partial void OnUSER_PHONEChanging(string value);
    partial void OnUSER_PHONEChanged();
    partial void OnUSER_STATUSChanging(System.Nullable<int> value);
    partial void OnUSER_STATUSChanged();
    #endregion
		
		public USER()
		{
			this._TICKETs = new EntitySet<TICKET>(new Action<TICKET>(this.attach_TICKETs), new Action<TICKET>(this.detach_TICKETs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERS_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int USERS_ID
		{
			get
			{
				return this._USERS_ID;
			}
			set
			{
				if ((this._USERS_ID != value))
				{
					this.OnUSERS_IDChanging(value);
					this.SendPropertyChanging();
					this._USERS_ID = value;
					this.SendPropertyChanged("USERS_ID");
					this.OnUSERS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERS_USERNAME", DbType="NVarChar(50)")]
		public string USERS_USERNAME
		{
			get
			{
				return this._USERS_USERNAME;
			}
			set
			{
				if ((this._USERS_USERNAME != value))
				{
					this.OnUSERS_USERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERS_USERNAME = value;
					this.SendPropertyChanged("USERS_USERNAME");
					this.OnUSERS_USERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERS_PASSWORD", DbType="NVarChar(50)")]
		public string USERS_PASSWORD
		{
			get
			{
				return this._USERS_PASSWORD;
			}
			set
			{
				if ((this._USERS_PASSWORD != value))
				{
					this.OnUSERS_PASSWORDChanging(value);
					this.SendPropertyChanging();
					this._USERS_PASSWORD = value;
					this.SendPropertyChanged("USERS_PASSWORD");
					this.OnUSERS_PASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERS_FULLNAME", DbType="NVarChar(50)")]
		public string USERS_FULLNAME
		{
			get
			{
				return this._USERS_FULLNAME;
			}
			set
			{
				if ((this._USERS_FULLNAME != value))
				{
					this.OnUSERS_FULLNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERS_FULLNAME = value;
					this.SendPropertyChanged("USERS_FULLNAME");
					this.OnUSERS_FULLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_EMAIL", DbType="NVarChar(50)")]
		public string USER_EMAIL
		{
			get
			{
				return this._USER_EMAIL;
			}
			set
			{
				if ((this._USER_EMAIL != value))
				{
					this.OnUSER_EMAILChanging(value);
					this.SendPropertyChanging();
					this._USER_EMAIL = value;
					this.SendPropertyChanged("USER_EMAIL");
					this.OnUSER_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_PHONE", DbType="NVarChar(50)")]
		public string USER_PHONE
		{
			get
			{
				return this._USER_PHONE;
			}
			set
			{
				if ((this._USER_PHONE != value))
				{
					this.OnUSER_PHONEChanging(value);
					this.SendPropertyChanging();
					this._USER_PHONE = value;
					this.SendPropertyChanged("USER_PHONE");
					this.OnUSER_PHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_STATUS", DbType="Int")]
		public System.Nullable<int> USER_STATUS
		{
			get
			{
				return this._USER_STATUS;
			}
			set
			{
				if ((this._USER_STATUS != value))
				{
					this.OnUSER_STATUSChanging(value);
					this.SendPropertyChanging();
					this._USER_STATUS = value;
					this.SendPropertyChanged("USER_STATUS");
					this.OnUSER_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_TICKET", Storage="_TICKETs", ThisKey="USERS_ID", OtherKey="TICKETS_USER_ID")]
		public EntitySet<TICKET> TICKETs
		{
			get
			{
				return this._TICKETs;
			}
			set
			{
				this._TICKETs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TICKETs(TICKET entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_TICKETs(TICKET entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CITY")]
	public partial class CITY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CITY_ID;
		
		private string _CITY_CODE;
		
		private string _CITY_NAME;
		
		private System.Nullable<int> _CITY_STATUS;
		
		private EntitySet<AIRLINE> _AIRLINEs;
		
		private EntitySet<AIRLINE> _AIRLINEs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCITY_IDChanging(int value);
    partial void OnCITY_IDChanged();
    partial void OnCITY_CODEChanging(string value);
    partial void OnCITY_CODEChanged();
    partial void OnCITY_NAMEChanging(string value);
    partial void OnCITY_NAMEChanged();
    partial void OnCITY_STATUSChanging(System.Nullable<int> value);
    partial void OnCITY_STATUSChanged();
    #endregion
		
		public CITY()
		{
			this._AIRLINEs = new EntitySet<AIRLINE>(new Action<AIRLINE>(this.attach_AIRLINEs), new Action<AIRLINE>(this.detach_AIRLINEs));
			this._AIRLINEs1 = new EntitySet<AIRLINE>(new Action<AIRLINE>(this.attach_AIRLINEs1), new Action<AIRLINE>(this.detach_AIRLINEs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CITY_ID
		{
			get
			{
				return this._CITY_ID;
			}
			set
			{
				if ((this._CITY_ID != value))
				{
					this.OnCITY_IDChanging(value);
					this.SendPropertyChanging();
					this._CITY_ID = value;
					this.SendPropertyChanged("CITY_ID");
					this.OnCITY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_CODE", DbType="NVarChar(50)")]
		public string CITY_CODE
		{
			get
			{
				return this._CITY_CODE;
			}
			set
			{
				if ((this._CITY_CODE != value))
				{
					this.OnCITY_CODEChanging(value);
					this.SendPropertyChanging();
					this._CITY_CODE = value;
					this.SendPropertyChanged("CITY_CODE");
					this.OnCITY_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_NAME", DbType="NVarChar(50)")]
		public string CITY_NAME
		{
			get
			{
				return this._CITY_NAME;
			}
			set
			{
				if ((this._CITY_NAME != value))
				{
					this.OnCITY_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CITY_NAME = value;
					this.SendPropertyChanged("CITY_NAME");
					this.OnCITY_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_STATUS", DbType="Int")]
		public System.Nullable<int> CITY_STATUS
		{
			get
			{
				return this._CITY_STATUS;
			}
			set
			{
				if ((this._CITY_STATUS != value))
				{
					this.OnCITY_STATUSChanging(value);
					this.SendPropertyChanging();
					this._CITY_STATUS = value;
					this.SendPropertyChanged("CITY_STATUS");
					this.OnCITY_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITY_AIRLINE", Storage="_AIRLINEs", ThisKey="CITY_ID", OtherKey="AIRLINE_CITY_ID_START")]
		public EntitySet<AIRLINE> AIRLINEs
		{
			get
			{
				return this._AIRLINEs;
			}
			set
			{
				this._AIRLINEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITY_AIRLINE1", Storage="_AIRLINEs1", ThisKey="CITY_ID", OtherKey="AIRLINE_CITY_ID_STOP")]
		public EntitySet<AIRLINE> AIRLINEs1
		{
			get
			{
				return this._AIRLINEs1;
			}
			set
			{
				this._AIRLINEs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AIRLINEs(AIRLINE entity)
		{
			this.SendPropertyChanging();
			entity.CITY = this;
		}
		
		private void detach_AIRLINEs(AIRLINE entity)
		{
			this.SendPropertyChanging();
			entity.CITY = null;
		}
		
		private void attach_AIRLINEs1(AIRLINE entity)
		{
			this.SendPropertyChanging();
			entity.CITY1 = this;
		}
		
		private void detach_AIRLINEs1(AIRLINE entity)
		{
			this.SendPropertyChanging();
			entity.CITY1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FLIGHT")]
	public partial class FLIGHT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FLIGHT_ID;
		
		private string _FLIGHT_CODE;
		
		private System.Nullable<int> _FLIGHT_PLANE_ID;
		
		private System.Nullable<int> _FLIGHT_AIRLINE_ID;
		
		private string _FLIGHT_DATE_START;
		
		private string _FLIGHT_DATE_STOP;
		
		private System.Nullable<int> _FLIGHT_PRICE;
		
		private System.Nullable<int> _FLIGHT_TOTALSEARTS;
		
		private System.Nullable<int> _FLIGHT_STATUS;
		
		private EntitySet<TICKET> _TICKETs;
		
		private EntityRef<AIRLINE> _AIRLINE;
		
		private EntityRef<PLANE> _PLANE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFLIGHT_IDChanging(int value);
    partial void OnFLIGHT_IDChanged();
    partial void OnFLIGHT_CODEChanging(string value);
    partial void OnFLIGHT_CODEChanged();
    partial void OnFLIGHT_PLANE_IDChanging(System.Nullable<int> value);
    partial void OnFLIGHT_PLANE_IDChanged();
    partial void OnFLIGHT_AIRLINE_IDChanging(System.Nullable<int> value);
    partial void OnFLIGHT_AIRLINE_IDChanged();
    partial void OnFLIGHT_DATE_STARTChanging(string value);
    partial void OnFLIGHT_DATE_STARTChanged();
    partial void OnFLIGHT_DATE_STOPChanging(string value);
    partial void OnFLIGHT_DATE_STOPChanged();
    partial void OnFLIGHT_PRICEChanging(System.Nullable<int> value);
    partial void OnFLIGHT_PRICEChanged();
    partial void OnFLIGHT_TOTALSEARTSChanging(System.Nullable<int> value);
    partial void OnFLIGHT_TOTALSEARTSChanged();
    partial void OnFLIGHT_STATUSChanging(System.Nullable<int> value);
    partial void OnFLIGHT_STATUSChanged();
    #endregion
		
		public FLIGHT()
		{
			this._TICKETs = new EntitySet<TICKET>(new Action<TICKET>(this.attach_TICKETs), new Action<TICKET>(this.detach_TICKETs));
			this._AIRLINE = default(EntityRef<AIRLINE>);
			this._PLANE = default(EntityRef<PLANE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLIGHT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FLIGHT_ID
		{
			get
			{
				return this._FLIGHT_ID;
			}
			set
			{
				if ((this._FLIGHT_ID != value))
				{
					this.OnFLIGHT_IDChanging(value);
					this.SendPropertyChanging();
					this._FLIGHT_ID = value;
					this.SendPropertyChanged("FLIGHT_ID");
					this.OnFLIGHT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLIGHT_CODE", DbType="NVarChar(50)")]
		public string FLIGHT_CODE
		{
			get
			{
				return this._FLIGHT_CODE;
			}
			set
			{
				if ((this._FLIGHT_CODE != value))
				{
					this.OnFLIGHT_CODEChanging(value);
					this.SendPropertyChanging();
					this._FLIGHT_CODE = value;
					this.SendPropertyChanged("FLIGHT_CODE");
					this.OnFLIGHT_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLIGHT_PLANE_ID", DbType="Int")]
		public System.Nullable<int> FLIGHT_PLANE_ID
		{
			get
			{
				return this._FLIGHT_PLANE_ID;
			}
			set
			{
				if ((this._FLIGHT_PLANE_ID != value))
				{
					if (this._PLANE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFLIGHT_PLANE_IDChanging(value);
					this.SendPropertyChanging();
					this._FLIGHT_PLANE_ID = value;
					this.SendPropertyChanged("FLIGHT_PLANE_ID");
					this.OnFLIGHT_PLANE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLIGHT_AIRLINE_ID", DbType="Int")]
		public System.Nullable<int> FLIGHT_AIRLINE_ID
		{
			get
			{
				return this._FLIGHT_AIRLINE_ID;
			}
			set
			{
				if ((this._FLIGHT_AIRLINE_ID != value))
				{
					if (this._AIRLINE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFLIGHT_AIRLINE_IDChanging(value);
					this.SendPropertyChanging();
					this._FLIGHT_AIRLINE_ID = value;
					this.SendPropertyChanged("FLIGHT_AIRLINE_ID");
					this.OnFLIGHT_AIRLINE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLIGHT_DATE_START", DbType="NVarChar(50)")]
		public string FLIGHT_DATE_START
		{
			get
			{
				return this._FLIGHT_DATE_START;
			}
			set
			{
				if ((this._FLIGHT_DATE_START != value))
				{
					this.OnFLIGHT_DATE_STARTChanging(value);
					this.SendPropertyChanging();
					this._FLIGHT_DATE_START = value;
					this.SendPropertyChanged("FLIGHT_DATE_START");
					this.OnFLIGHT_DATE_STARTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLIGHT_DATE_STOP", DbType="NVarChar(50)")]
		public string FLIGHT_DATE_STOP
		{
			get
			{
				return this._FLIGHT_DATE_STOP;
			}
			set
			{
				if ((this._FLIGHT_DATE_STOP != value))
				{
					this.OnFLIGHT_DATE_STOPChanging(value);
					this.SendPropertyChanging();
					this._FLIGHT_DATE_STOP = value;
					this.SendPropertyChanged("FLIGHT_DATE_STOP");
					this.OnFLIGHT_DATE_STOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLIGHT_PRICE", DbType="Int")]
		public System.Nullable<int> FLIGHT_PRICE
		{
			get
			{
				return this._FLIGHT_PRICE;
			}
			set
			{
				if ((this._FLIGHT_PRICE != value))
				{
					this.OnFLIGHT_PRICEChanging(value);
					this.SendPropertyChanging();
					this._FLIGHT_PRICE = value;
					this.SendPropertyChanged("FLIGHT_PRICE");
					this.OnFLIGHT_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLIGHT_TOTALSEARTS", DbType="Int")]
		public System.Nullable<int> FLIGHT_TOTALSEARTS
		{
			get
			{
				return this._FLIGHT_TOTALSEARTS;
			}
			set
			{
				if ((this._FLIGHT_TOTALSEARTS != value))
				{
					this.OnFLIGHT_TOTALSEARTSChanging(value);
					this.SendPropertyChanging();
					this._FLIGHT_TOTALSEARTS = value;
					this.SendPropertyChanged("FLIGHT_TOTALSEARTS");
					this.OnFLIGHT_TOTALSEARTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLIGHT_STATUS", DbType="Int")]
		public System.Nullable<int> FLIGHT_STATUS
		{
			get
			{
				return this._FLIGHT_STATUS;
			}
			set
			{
				if ((this._FLIGHT_STATUS != value))
				{
					this.OnFLIGHT_STATUSChanging(value);
					this.SendPropertyChanging();
					this._FLIGHT_STATUS = value;
					this.SendPropertyChanged("FLIGHT_STATUS");
					this.OnFLIGHT_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FLIGHT_TICKET", Storage="_TICKETs", ThisKey="FLIGHT_ID", OtherKey="TICKETS_FLIGHT_ID")]
		public EntitySet<TICKET> TICKETs
		{
			get
			{
				return this._TICKETs;
			}
			set
			{
				this._TICKETs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AIRLINE_FLIGHT", Storage="_AIRLINE", ThisKey="FLIGHT_AIRLINE_ID", OtherKey="AIRLINE_ID", IsForeignKey=true)]
		public AIRLINE AIRLINE
		{
			get
			{
				return this._AIRLINE.Entity;
			}
			set
			{
				AIRLINE previousValue = this._AIRLINE.Entity;
				if (((previousValue != value) 
							|| (this._AIRLINE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AIRLINE.Entity = null;
						previousValue.FLIGHTs.Remove(this);
					}
					this._AIRLINE.Entity = value;
					if ((value != null))
					{
						value.FLIGHTs.Add(this);
						this._FLIGHT_AIRLINE_ID = value.AIRLINE_ID;
					}
					else
					{
						this._FLIGHT_AIRLINE_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AIRLINE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PLANE_FLIGHT", Storage="_PLANE", ThisKey="FLIGHT_PLANE_ID", OtherKey="PLANE_ID", IsForeignKey=true)]
		public PLANE PLANE
		{
			get
			{
				return this._PLANE.Entity;
			}
			set
			{
				PLANE previousValue = this._PLANE.Entity;
				if (((previousValue != value) 
							|| (this._PLANE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PLANE.Entity = null;
						previousValue.FLIGHTs.Remove(this);
					}
					this._PLANE.Entity = value;
					if ((value != null))
					{
						value.FLIGHTs.Add(this);
						this._FLIGHT_PLANE_ID = value.PLANE_ID;
					}
					else
					{
						this._FLIGHT_PLANE_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PLANE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TICKETs(TICKET entity)
		{
			this.SendPropertyChanging();
			entity.FLIGHT = this;
		}
		
		private void detach_TICKETs(TICKET entity)
		{
			this.SendPropertyChanging();
			entity.FLIGHT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PLANE")]
	public partial class PLANE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PLANE_ID;
		
		private string _PLANE_CODE;
		
		private string _PLANE_NAME;
		
		private string _PLANE_TOTALSEATS;
		
		private System.Nullable<int> _PLANE_STATUS;
		
		private EntitySet<FLIGHT> _FLIGHTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPLANE_IDChanging(int value);
    partial void OnPLANE_IDChanged();
    partial void OnPLANE_CODEChanging(string value);
    partial void OnPLANE_CODEChanged();
    partial void OnPLANE_NAMEChanging(string value);
    partial void OnPLANE_NAMEChanged();
    partial void OnPLANE_TOTALSEATSChanging(string value);
    partial void OnPLANE_TOTALSEATSChanged();
    partial void OnPLANE_STATUSChanging(System.Nullable<int> value);
    partial void OnPLANE_STATUSChanged();
    #endregion
		
		public PLANE()
		{
			this._FLIGHTs = new EntitySet<FLIGHT>(new Action<FLIGHT>(this.attach_FLIGHTs), new Action<FLIGHT>(this.detach_FLIGHTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLANE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PLANE_ID
		{
			get
			{
				return this._PLANE_ID;
			}
			set
			{
				if ((this._PLANE_ID != value))
				{
					this.OnPLANE_IDChanging(value);
					this.SendPropertyChanging();
					this._PLANE_ID = value;
					this.SendPropertyChanged("PLANE_ID");
					this.OnPLANE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLANE_CODE", DbType="NVarChar(50)")]
		public string PLANE_CODE
		{
			get
			{
				return this._PLANE_CODE;
			}
			set
			{
				if ((this._PLANE_CODE != value))
				{
					this.OnPLANE_CODEChanging(value);
					this.SendPropertyChanging();
					this._PLANE_CODE = value;
					this.SendPropertyChanged("PLANE_CODE");
					this.OnPLANE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLANE_NAME", DbType="NVarChar(50)")]
		public string PLANE_NAME
		{
			get
			{
				return this._PLANE_NAME;
			}
			set
			{
				if ((this._PLANE_NAME != value))
				{
					this.OnPLANE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._PLANE_NAME = value;
					this.SendPropertyChanged("PLANE_NAME");
					this.OnPLANE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLANE_TOTALSEATS", DbType="NVarChar(50)")]
		public string PLANE_TOTALSEATS
		{
			get
			{
				return this._PLANE_TOTALSEATS;
			}
			set
			{
				if ((this._PLANE_TOTALSEATS != value))
				{
					this.OnPLANE_TOTALSEATSChanging(value);
					this.SendPropertyChanging();
					this._PLANE_TOTALSEATS = value;
					this.SendPropertyChanged("PLANE_TOTALSEATS");
					this.OnPLANE_TOTALSEATSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLANE_STATUS", DbType="Int")]
		public System.Nullable<int> PLANE_STATUS
		{
			get
			{
				return this._PLANE_STATUS;
			}
			set
			{
				if ((this._PLANE_STATUS != value))
				{
					this.OnPLANE_STATUSChanging(value);
					this.SendPropertyChanging();
					this._PLANE_STATUS = value;
					this.SendPropertyChanged("PLANE_STATUS");
					this.OnPLANE_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PLANE_FLIGHT", Storage="_FLIGHTs", ThisKey="PLANE_ID", OtherKey="FLIGHT_PLANE_ID")]
		public EntitySet<FLIGHT> FLIGHTs
		{
			get
			{
				return this._FLIGHTs;
			}
			set
			{
				this._FLIGHTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FLIGHTs(FLIGHT entity)
		{
			this.SendPropertyChanging();
			entity.PLANE = this;
		}
		
		private void detach_FLIGHTs(FLIGHT entity)
		{
			this.SendPropertyChanging();
			entity.PLANE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TICKETS")]
	public partial class TICKET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TICKETS_ID;
		
		private string _TICKETS_CODE;
		
		private System.Nullable<int> _TICKETS_USER_ID;
		
		private System.Nullable<int> _TICKETS_FLIGHT_ID;
		
		private string _TICKETS_PASSPORT;
		
		private string _TICKETS_PRICE;
		
		private string _TICKETS_CUSTOME_FULLNAME;
		
		private string _TICKETS_CUSTOMER_ADDRESS;
		
		private string _TICKETS_CUSTOMER_PHONE;
		
		private EntityRef<FLIGHT> _FLIGHT;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTICKETS_IDChanging(int value);
    partial void OnTICKETS_IDChanged();
    partial void OnTICKETS_CODEChanging(string value);
    partial void OnTICKETS_CODEChanged();
    partial void OnTICKETS_USER_IDChanging(System.Nullable<int> value);
    partial void OnTICKETS_USER_IDChanged();
    partial void OnTICKETS_FLIGHT_IDChanging(System.Nullable<int> value);
    partial void OnTICKETS_FLIGHT_IDChanged();
    partial void OnTICKETS_PASSPORTChanging(string value);
    partial void OnTICKETS_PASSPORTChanged();
    partial void OnTICKETS_PRICEChanging(string value);
    partial void OnTICKETS_PRICEChanged();
    partial void OnTICKETS_CUSTOME_FULLNAMEChanging(string value);
    partial void OnTICKETS_CUSTOME_FULLNAMEChanged();
    partial void OnTICKETS_CUSTOMER_ADDRESSChanging(string value);
    partial void OnTICKETS_CUSTOMER_ADDRESSChanged();
    partial void OnTICKETS_CUSTOMER_PHONEChanging(string value);
    partial void OnTICKETS_CUSTOMER_PHONEChanged();
    #endregion
		
		public TICKET()
		{
			this._FLIGHT = default(EntityRef<FLIGHT>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKETS_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TICKETS_ID
		{
			get
			{
				return this._TICKETS_ID;
			}
			set
			{
				if ((this._TICKETS_ID != value))
				{
					this.OnTICKETS_IDChanging(value);
					this.SendPropertyChanging();
					this._TICKETS_ID = value;
					this.SendPropertyChanged("TICKETS_ID");
					this.OnTICKETS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKETS_CODE", DbType="NVarChar(50)")]
		public string TICKETS_CODE
		{
			get
			{
				return this._TICKETS_CODE;
			}
			set
			{
				if ((this._TICKETS_CODE != value))
				{
					this.OnTICKETS_CODEChanging(value);
					this.SendPropertyChanging();
					this._TICKETS_CODE = value;
					this.SendPropertyChanged("TICKETS_CODE");
					this.OnTICKETS_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKETS_USER_ID", DbType="Int")]
		public System.Nullable<int> TICKETS_USER_ID
		{
			get
			{
				return this._TICKETS_USER_ID;
			}
			set
			{
				if ((this._TICKETS_USER_ID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTICKETS_USER_IDChanging(value);
					this.SendPropertyChanging();
					this._TICKETS_USER_ID = value;
					this.SendPropertyChanged("TICKETS_USER_ID");
					this.OnTICKETS_USER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKETS_FLIGHT_ID", DbType="Int")]
		public System.Nullable<int> TICKETS_FLIGHT_ID
		{
			get
			{
				return this._TICKETS_FLIGHT_ID;
			}
			set
			{
				if ((this._TICKETS_FLIGHT_ID != value))
				{
					if (this._FLIGHT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTICKETS_FLIGHT_IDChanging(value);
					this.SendPropertyChanging();
					this._TICKETS_FLIGHT_ID = value;
					this.SendPropertyChanged("TICKETS_FLIGHT_ID");
					this.OnTICKETS_FLIGHT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKETS_PASSPORT", DbType="NVarChar(50)")]
		public string TICKETS_PASSPORT
		{
			get
			{
				return this._TICKETS_PASSPORT;
			}
			set
			{
				if ((this._TICKETS_PASSPORT != value))
				{
					this.OnTICKETS_PASSPORTChanging(value);
					this.SendPropertyChanging();
					this._TICKETS_PASSPORT = value;
					this.SendPropertyChanged("TICKETS_PASSPORT");
					this.OnTICKETS_PASSPORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKETS_PRICE", DbType="NVarChar(50)")]
		public string TICKETS_PRICE
		{
			get
			{
				return this._TICKETS_PRICE;
			}
			set
			{
				if ((this._TICKETS_PRICE != value))
				{
					this.OnTICKETS_PRICEChanging(value);
					this.SendPropertyChanging();
					this._TICKETS_PRICE = value;
					this.SendPropertyChanged("TICKETS_PRICE");
					this.OnTICKETS_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKETS_CUSTOME_FULLNAME", DbType="NVarChar(50)")]
		public string TICKETS_CUSTOME_FULLNAME
		{
			get
			{
				return this._TICKETS_CUSTOME_FULLNAME;
			}
			set
			{
				if ((this._TICKETS_CUSTOME_FULLNAME != value))
				{
					this.OnTICKETS_CUSTOME_FULLNAMEChanging(value);
					this.SendPropertyChanging();
					this._TICKETS_CUSTOME_FULLNAME = value;
					this.SendPropertyChanged("TICKETS_CUSTOME_FULLNAME");
					this.OnTICKETS_CUSTOME_FULLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKETS_CUSTOMER_ADDRESS", DbType="NVarChar(50)")]
		public string TICKETS_CUSTOMER_ADDRESS
		{
			get
			{
				return this._TICKETS_CUSTOMER_ADDRESS;
			}
			set
			{
				if ((this._TICKETS_CUSTOMER_ADDRESS != value))
				{
					this.OnTICKETS_CUSTOMER_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._TICKETS_CUSTOMER_ADDRESS = value;
					this.SendPropertyChanged("TICKETS_CUSTOMER_ADDRESS");
					this.OnTICKETS_CUSTOMER_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKETS_CUSTOMER_PHONE", DbType="NVarChar(50)")]
		public string TICKETS_CUSTOMER_PHONE
		{
			get
			{
				return this._TICKETS_CUSTOMER_PHONE;
			}
			set
			{
				if ((this._TICKETS_CUSTOMER_PHONE != value))
				{
					this.OnTICKETS_CUSTOMER_PHONEChanging(value);
					this.SendPropertyChanging();
					this._TICKETS_CUSTOMER_PHONE = value;
					this.SendPropertyChanged("TICKETS_CUSTOMER_PHONE");
					this.OnTICKETS_CUSTOMER_PHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FLIGHT_TICKET", Storage="_FLIGHT", ThisKey="TICKETS_FLIGHT_ID", OtherKey="FLIGHT_ID", IsForeignKey=true)]
		public FLIGHT FLIGHT
		{
			get
			{
				return this._FLIGHT.Entity;
			}
			set
			{
				FLIGHT previousValue = this._FLIGHT.Entity;
				if (((previousValue != value) 
							|| (this._FLIGHT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FLIGHT.Entity = null;
						previousValue.TICKETs.Remove(this);
					}
					this._FLIGHT.Entity = value;
					if ((value != null))
					{
						value.TICKETs.Add(this);
						this._TICKETS_FLIGHT_ID = value.FLIGHT_ID;
					}
					else
					{
						this._TICKETS_FLIGHT_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("FLIGHT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_TICKET", Storage="_USER", ThisKey="TICKETS_USER_ID", OtherKey="USERS_ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.TICKETs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.TICKETs.Add(this);
						this._TICKETS_USER_ID = value.USERS_ID;
					}
					else
					{
						this._TICKETS_USER_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
